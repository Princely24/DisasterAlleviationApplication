@model DisasterAlleviationApplication.Models.DisasterIncident

@{
    ViewData["Title"] = "Incident Details";
}

<div class="row justify-content-center">
    <div class="col-md-8">
        <div class="card">
            <div class="card-header d-flex justify-content-between align-items-center bg-danger text-white">
                <h4 class="mb-0">
                    <i class="fas fa-exclamation-triangle me-2"></i>@Model.Title
                </h4>
                <div>
                    <span class="badge bg-@(Model.Severity switch {
                        DisasterAlleviationApplication.Models.IncidentSeverity.Low => "success",
                        DisasterAlleviationApplication.Models.IncidentSeverity.Medium => "warning",
                        DisasterAlleviationApplication.Models.IncidentSeverity.High => "danger",
                        DisasterAlleviationApplication.Models.IncidentSeverity.Critical => "dark",
                        _ => "secondary"
                    }) fs-6">@Model.Severity</span>
                    <span class="badge bg-@(Model.Status switch {
                        DisasterAlleviationApplication.Models.IncidentStatus.Reported => "warning",
                        DisasterAlleviationApplication.Models.IncidentStatus.UnderReview => "info",
                        DisasterAlleviationApplication.Models.IncidentStatus.InProgress => "primary",
                        DisasterAlleviationApplication.Models.IncidentStatus.Resolved => "success",
                        DisasterAlleviationApplication.Models.IncidentStatus.Closed => "secondary",
                        _ => "secondary"
                    }) fs-6 ms-1">@Model.Status</span>
                </div>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6">
                        <h5 class="text-primary mb-3">
                            <i class="fas fa-info-circle me-2"></i>Incident Information
                        </h5>
                        <table class="table table-borderless">
                            <tr>
                                <td class="fw-bold">Type:</td>
                                <td><span class="badge bg-secondary">@Model.Type</span></td>
                            </tr>
                            <tr>
                                <td class="fw-bold">Severity:</td>
                                <td><span class="badge bg-@(Model.Severity switch {
                                    DisasterAlleviationApplication.Models.IncidentSeverity.Low => "success",
                                    DisasterAlleviationApplication.Models.IncidentSeverity.Medium => "warning",
                                    DisasterAlleviationApplication.Models.IncidentSeverity.High => "danger",
                                    DisasterAlleviationApplication.Models.IncidentSeverity.Critical => "dark",
                                    _ => "secondary"
                                })">@Model.Severity</span></td>
                            </tr>
                            <tr>
                                <td class="fw-bold">Location:</td>
                                <td>@Model.Location</td>
                            </tr>
                            <tr>
                                <td class="fw-bold">City:</td>
                                <td>@Model.City</td>
                            </tr>
                            <tr>
                                <td class="fw-bold">State:</td>
                                <td>@Model.State</td>
                            </tr>
                            <tr>
                                <td class="fw-bold">Postal Code:</td>
                                <td>@Model.PostalCode</td>
                            </tr>
                        </table>
                    </div>
                    <div class="col-md-6">
                        <h5 class="text-success mb-3">
                            <i class="fas fa-calendar-alt me-2"></i>Timeline & Reporter
                        </h5>
                        <table class="table table-borderless">
                            <tr>
                                <td class="fw-bold">Incident Date:</td>
                                <td>@Model.IncidentDate.ToString("MMMM dd, yyyy 'at' h:mm tt")</td>
                            </tr>
                            <tr>
                                <td class="fw-bold">Reported Date:</td>
                                <td>@Model.ReportedDate.ToString("MMMM dd, yyyy 'at' h:mm tt")</td>
                            </tr>
                            <tr>
                                <td class="fw-bold">Reported By:</td>
                                <td>@Model.User?.FirstName @Model.User?.LastName</td>
                            </tr>
                            <tr>
                                <td class="fw-bold">Reporter Email:</td>
                                <td>@Model.User?.Email</td>
                            </tr>
                            @if (Model.EstimatedAffectedPeople.HasValue)
                            {
                                <tr>
                                    <td class="fw-bold">Affected People:</td>
                                    <td><span class="badge bg-warning">@Model.EstimatedAffectedPeople</span></td>
                                </tr>
                            }
                        </table>
                    </div>
                </div>

                <div class="mt-4">
                    <h5 class="text-info mb-3">
                        <i class="fas fa-align-left me-2"></i>Description
                    </h5>
                    <div class="border rounded p-3 bg-light">
                        @Model.Description
                    </div>
                </div>

                @if (Model.Latitude.HasValue && Model.Longitude.HasValue)
                {
                    <div class="mt-4">
                        <h5 class="text-warning mb-3">
                            <i class="fas fa-map-marker-alt me-2"></i>Coordinates
                        </h5>
                        <div class="border rounded p-3 bg-light">
                            <strong>Latitude:</strong> @Model.Latitude.Value.ToString("F6")<br>
                            <strong>Longitude:</strong> @Model.Longitude.Value.ToString("F6")
                        </div>
                    </div>
                }

                @if (!string.IsNullOrEmpty(Model.AdditionalNotes))
                {
                    <div class="mt-4">
                        <h5 class="text-secondary mb-3">
                            <i class="fas fa-sticky-note me-2"></i>Additional Notes
                        </h5>
                        <div class="border rounded p-3 bg-light">
                            @Model.AdditionalNotes
                        </div>
                    </div>
                }

                @if (!string.IsNullOrEmpty(Model.AttachmentFilePath))
                {
                    <div class="mt-4">
                        <h5 class="text-primary mb-3">
                            <i class="fas fa-paperclip me-2"></i>Attachment
                        </h5>
                        <div class="border rounded p-3 bg-light">
                            <div class="d-flex align-items-center">
                                @if (Model.AttachmentContentType?.StartsWith("image/") == true)
                                {
                                    <div class="mb-3">
                                        <img src="@Model.AttachmentFilePath" alt="Incident attachment" class="img-fluid rounded" style="max-width: 100%; max-height: 500px;" />
                                    </div>
                                }
                                else if (Model.AttachmentContentType == "application/pdf")
                                {
                                    <div>
                                        <i class="fas fa-file-pdf fa-3x text-danger me-3"></i>
                                        <div>
                                            <strong>@Model.AttachmentFileName</strong><br>
                                            <small class="text-muted">PDF Document - @(Model.AttachmentFileSize.HasValue ? (Model.AttachmentFileSize.Value / 1024.0).ToString("F2") : "0") KB</small>
                                        </div>
                                    </div>
                                }
                            </div>
                            <div class="mt-2">
                                <a href="@Model.AttachmentFilePath" target="_blank" class="btn btn-sm btn-primary">
                                    <i class="fas fa-download me-1"></i>Download / View
                                </a>
                                <small class="text-muted ms-2">
                                    Uploaded: @Model.AttachmentUploadedDate?.ToString("MMMM dd, yyyy 'at' h:mm tt")
                                </small>
                            </div>
                        </div>
                    </div>
                }

                <div class="d-flex justify-content-between mt-4">
                    <a asp-action="Index" class="btn btn-secondary">
                        <i class="fas fa-arrow-left me-1"></i>Back to List
                    </a>
                    <div>
                        @if (Model.UserId == ViewBag.CurrentUserId)
                        {
                            <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-warning">
                                <i class="fas fa-edit me-1"></i>Edit Incident
                            </a>
                            <a asp-action="Delete" asp-route-id="@Model.Id" class="btn btn-danger">
                                <i class="fas fa-trash me-1"></i>Delete Incident
                            </a>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Add current user ID to view bag for comparison
        @{
            ViewBag.CurrentUserId = User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value;
        }
    </script>
}
