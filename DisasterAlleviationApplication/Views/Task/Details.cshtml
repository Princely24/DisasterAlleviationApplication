@model DisasterAlleviationApplication.Models.VolunteerTask

@{
    ViewData["Title"] = "Task Details";
}

<div class="row justify-content-center">
    <div class="col-md-8">
        <div class="card">
            <div class="card-header d-flex justify-content-between align-items-center bg-primary text-white">
                <h4 class="mb-0">
                    <i class="fas fa-tasks me-2"></i>@Model.Title
                </h4>
                <div>
                    <span class="badge bg-@(Model.Status switch {
                        DisasterAlleviationApplication.Models.TaskStatus.Open => "success",
                        DisasterAlleviationApplication.Models.TaskStatus.Assigned => "info",
                        DisasterAlleviationApplication.Models.TaskStatus.InProgress => "primary",
                        DisasterAlleviationApplication.Models.TaskStatus.Completed => "success",
                        DisasterAlleviationApplication.Models.TaskStatus.Cancelled => "danger",
                        _ => "secondary"
                    }) fs-6">@Model.Status</span>
                    @if (Model.Priority == DisasterAlleviationApplication.Models.TaskPriority.Critical)
                    {
                        <span class="badge bg-danger fs-6 ms-1">Critical</span>
                    }
                </div>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6">
                        <h5 class="text-primary mb-3">
                            <i class="fas fa-info-circle me-2"></i>Task Information
                        </h5>
                        <table class="table table-borderless">
                            <tr>
                                <td class="fw-bold">Category:</td>
                                <td><span class="badge bg-secondary">@Model.Category</span></td>
                            </tr>
                            <tr>
                                <td class="fw-bold">Priority:</td>
                                <td><span class="badge bg-@(Model.Priority switch {
                                    DisasterAlleviationApplication.Models.TaskPriority.Low => "success",
                                    DisasterAlleviationApplication.Models.TaskPriority.Medium => "warning",
                                    DisasterAlleviationApplication.Models.TaskPriority.High => "danger",
                                    DisasterAlleviationApplication.Models.TaskPriority.Critical => "dark",
                                    _ => "secondary"
                                })">@Model.Priority</span></td>
                            </tr>
                            <tr>
                                <td class="fw-bold">Location:</td>
                                <td>@Model.Location</td>
                            </tr>
                            <tr>
                                <td class="fw-bold">Start Date:</td>
                                <td>@Model.StartDate.ToString("MMMM dd, yyyy 'at' h:mm tt")</td>
                            </tr>
                            <tr>
                                <td class="fw-bold">End Date:</td>
                                <td>@Model.EndDate.ToString("MMMM dd, yyyy 'at' h:mm tt")</td>
                            </tr>
                            <tr>
                                <td class="fw-bold">Created:</td>
                                <td>@Model.CreatedDate.ToString("MMMM dd, yyyy")</td>
                            </tr>
                        </table>
                    </div>
                    <div class="col-md-6">
                        <h5 class="text-success mb-3">
                            <i class="fas fa-users me-2"></i>Volunteer Information
                        </h5>
                        <table class="table table-borderless">
                            <tr>
                                <td class="fw-bold">Required Volunteers:</td>
                                <td><span class="badge bg-info">@Model.CurrentVolunteers / @Model.RequiredVolunteers</span></td>
                            </tr>
                            @if (Model.EstimatedHours.HasValue)
                            {
                                <tr>
                                    <td class="fw-bold">Estimated Hours:</td>
                                    <td>@Model.EstimatedHours hours</td>
                                </tr>
                            }
                            @if (Model.AssignedVolunteer != null)
                            {
                                <tr>
                                    <td class="fw-bold">Assigned Volunteer:</td>
                                    <td>@Model.AssignedVolunteer.FirstName @Model.AssignedVolunteer.LastName</td>
                                </tr>
                            }
                        </table>
                    </div>
                </div>

                <div class="mt-4">
                    <h5 class="text-info mb-3">
                        <i class="fas fa-align-left me-2"></i>Description
                    </h5>
                    <div class="border rounded p-3 bg-light">
                        @Model.Description
                    </div>
                </div>

                @if (!string.IsNullOrEmpty(Model.RequiredSkills))
                {
                    <div class="mt-4">
                        <h5 class="text-warning mb-3">
                            <i class="fas fa-tools me-2"></i>Required Skills
                        </h5>
                        <div class="border rounded p-3 bg-light">
                            @Model.RequiredSkills
                        </div>
                    </div>
                }

                @if (!string.IsNullOrEmpty(Model.Equipment))
                {
                    <div class="mt-4">
                        <h5 class="text-secondary mb-3">
                            <i class="fas fa-toolbox me-2"></i>Required Equipment
                        </h5>
                        <div class="border rounded p-3 bg-light">
                            @Model.Equipment
                        </div>
                    </div>
                }

                @if (!string.IsNullOrEmpty(Model.Notes))
                {
                    <div class="mt-4">
                        <h5 class="text-secondary mb-3">
                            <i class="fas fa-sticky-note me-2"></i>Additional Notes
                        </h5>
                        <div class="border rounded p-3 bg-light">
                            @Model.Notes
                        </div>
                    </div>
                }

                @if (Model.Assignments.Any())
                {
                    <div class="mt-4">
                        <h5 class="text-success mb-3">
                            <i class="fas fa-user-check me-2"></i>Assigned Volunteers
                        </h5>
                        <div class="table-responsive">
                            <table class="table table-sm">
                                <thead class="table-dark">
                                    <tr>
                                        <th>Volunteer</th>
                                        <th>Assigned Date</th>
                                        <th>Status</th>
                                        <th>Hours Worked</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var assignment in Model.Assignments)
                                    {
                                        <tr>
                                            <td>@assignment.Volunteer.FirstName @assignment.Volunteer.LastName</td>
                                            <td>@assignment.AssignedDate.ToString("MMM dd, yyyy")</td>
                                            <td>
                                                <span class="badge bg-@(assignment.Status switch {
                                                    DisasterAlleviationApplication.Models.AssignmentStatus.Assigned => "warning",
                                                    DisasterAlleviationApplication.Models.AssignmentStatus.Accepted => "info",
                                                    DisasterAlleviationApplication.Models.AssignmentStatus.InProgress => "primary",
                                                    DisasterAlleviationApplication.Models.AssignmentStatus.Completed => "success",
                                                    DisasterAlleviationApplication.Models.AssignmentStatus.Cancelled => "danger",
                                                    DisasterAlleviationApplication.Models.AssignmentStatus.NoShow => "dark",
                                                    _ => "secondary"
                                                })">@assignment.Status</span>
                                            </td>
                                            <td>@(assignment.HoursWorked?.ToString() ?? "N/A")</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                }

                <div class="d-flex justify-content-between mt-4">
                    <a asp-action="Index" class="btn btn-secondary">
                        <i class="fas fa-arrow-left me-1"></i>Back to List
                    </a>
                    <div>
                        @if (Model.Status == DisasterAlleviationApplication.Models.TaskStatus.Open && Model.CurrentVolunteers < Model.RequiredVolunteers)
                        {
                            <a asp-action="Apply" asp-route-id="@Model.Id" class="btn btn-success">
                                <i class="fas fa-user-plus me-1"></i>Apply for Task
                            </a>
                        }
                        <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-warning">
                            <i class="fas fa-edit me-1"></i>Edit Task
                        </a>
                        <a asp-action="Delete" asp-route-id="@Model.Id" class="btn btn-danger">
                            <i class="fas fa-trash me-1"></i>Delete Task
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
