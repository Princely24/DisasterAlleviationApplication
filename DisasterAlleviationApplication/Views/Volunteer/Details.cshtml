@model DisasterAlleviationApplication.Models.Volunteer

@{
    ViewData["Title"] = "Volunteer Details";
}

<div class="row justify-content-center">
    <div class="col-md-8">
        <div class="card">
            <div class="card-header d-flex justify-content-between align-items-center bg-info text-white">
                <h4 class="mb-0">
                    <i class="fas fa-user me-2"></i>@Model.FirstName @Model.LastName
                </h4>
                <div>
                    <span class="badge bg-@(Model.Status switch {
                        DisasterAlleviationApplication.Models.VolunteerStatus.Pending => "warning",
                        DisasterAlleviationApplication.Models.VolunteerStatus.Approved => "success",
                        DisasterAlleviationApplication.Models.VolunteerStatus.Active => "primary",
                        DisasterAlleviationApplication.Models.VolunteerStatus.Inactive => "secondary",
                        DisasterAlleviationApplication.Models.VolunteerStatus.Suspended => "danger",
                        _ => "secondary"
                    }) fs-6">@Model.Status</span>
                    @if (Model.HasBackgroundCheck)
                    {
                        <span class="badge bg-success fs-6 ms-1">Background Checked</span>
                    }
                </div>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6">
                        <h5 class="text-primary mb-3">
                            <i class="fas fa-user-circle me-2"></i>Personal Information
                        </h5>
                        <table class="table table-borderless">
                            <tr>
                                <td class="fw-bold">Name:</td>
                                <td>@Model.FirstName @Model.LastName</td>
                            </tr>
                            <tr>
                                <td class="fw-bold">Email:</td>
                                <td>@Model.Email</td>
                            </tr>
                            <tr>
                                <td class="fw-bold">Phone:</td>
                                <td>@Model.PhoneNumber</td>
                            </tr>
                            <tr>
                                <td class="fw-bold">Date of Birth:</td>
                                <td>@Model.DateOfBirth.ToString("MMMM dd, yyyy")</td>
                            </tr>
                            <tr>
                                <td class="fw-bold">Registration Date:</td>
                                <td>@Model.RegistrationDate.ToString("MMMM dd, yyyy")</td>
                            </tr>
                        </table>
                    </div>
                    <div class="col-md-6">
                        <h5 class="text-success mb-3">
                            <i class="fas fa-map-marker-alt me-2"></i>Contact Information
                        </h5>
                        <table class="table table-borderless">
                            <tr>
                                <td class="fw-bold">Address:</td>
                                <td>@(Model.Address ?? "Not specified")</td>
                            </tr>
                            <tr>
                                <td class="fw-bold">City:</td>
                                <td>@(Model.City ?? "Not specified")</td>
                            </tr>
                            <tr>
                                <td class="fw-bold">State:</td>
                                <td>@(Model.State ?? "Not specified")</td>
                            </tr>
                            <tr>
                                <td class="fw-bold">Postal Code:</td>
                                <td>@(Model.PostalCode ?? "Not specified")</td>
                            </tr>
                        </table>
                    </div>
                </div>

                <div class="row mt-4">
                    <div class="col-md-6">
                        <h5 class="text-warning mb-3">
                            <i class="fas fa-tools me-2"></i>Skills & Availability
                        </h5>
                        <table class="table table-borderless">
                            <tr>
                                <td class="fw-bold">Skills:</td>
                                <td>@(Model.Skills ?? "Not specified")</td>
                            </tr>
                            <tr>
                                <td class="fw-bold">Interests:</td>
                                <td>@(Model.Interests ?? "Not specified")</td>
                            </tr>
                            <tr>
                                <td class="fw-bold">Availability:</td>
                                <td>@(Model.Availability ?? "Not specified")</td>
                            </tr>
                        </table>
                    </div>
                    <div class="col-md-6">
                        <h5 class="text-info mb-3">
                            <i class="fas fa-chart-line me-2"></i>Volunteer Statistics
                        </h5>
                        <table class="table table-borderless">
                            <tr>
                                <td class="fw-bold">Total Hours:</td>
                                <td><span class="badge bg-primary fs-6">@Model.TotalHoursVolunteered hours</span></td>
                            </tr>
                            <tr>
                                <td class="fw-bold">Active Tasks:</td>
                                <td><span class="badge bg-success fs-6">@Model.Assignments.Count(a => a.Status == DisasterAlleviationApplication.Models.AssignmentStatus.InProgress || a.Status == DisasterAlleviationApplication.Models.AssignmentStatus.Assigned)</span></td>
                            </tr>
                            <tr>
                                <td class="fw-bold">Completed Tasks:</td>
                                <td><span class="badge bg-info fs-6">@Model.Assignments.Count(a => a.Status == DisasterAlleviationApplication.Models.AssignmentStatus.Completed)</span></td>
                            </tr>
                            <tr>
                                <td class="fw-bold">Background Check:</td>
                                <td>
                                    @if (Model.HasBackgroundCheck)
                                    {
                                        <span class="badge bg-success">Completed</span>
                                        @if (Model.BackgroundCheckDate.HasValue)
                                        {
                                            <br><small class="text-muted">@Model.BackgroundCheckDate.Value.ToString("MMM dd, yyyy")</small>
                                        }
                                    }
                                    else
                                    {
                                        <span class="badge bg-warning">Pending</span>
                                    }
                                </td>
                            </tr>
                        </table>
                    </div>
                </div>

                @if (!string.IsNullOrEmpty(Model.Notes))
                {
                    <div class="mt-4">
                        <h5 class="text-secondary mb-3">
                            <i class="fas fa-sticky-note me-2"></i>Additional Notes
                        </h5>
                        <div class="border rounded p-3 bg-light">
                            @Model.Notes
                        </div>
                    </div>
                }

                @if (!string.IsNullOrEmpty(Model.EmergencyContactName))
                {
                    <div class="mt-4">
                        <h5 class="text-danger mb-3">
                            <i class="fas fa-phone-alt me-2"></i>Emergency Contact
                        </h5>
                        <table class="table table-borderless">
                            <tr>
                                <td class="fw-bold">Name:</td>
                                <td>@Model.EmergencyContactName</td>
                            </tr>
                            <tr>
                                <td class="fw-bold">Phone:</td>
                                <td>@Model.EmergencyContactPhone</td>
                            </tr>
                        </table>
                    </div>
                }

                @if (Model.Assignments.Any())
                {
                    <div class="mt-4">
                        <h5 class="text-success mb-3">
                            <i class="fas fa-tasks me-2"></i>Task Assignments
                        </h5>
                        <div class="table-responsive">
                            <table class="table table-sm">
                                <thead class="table-dark">
                                    <tr>
                                        <th>Task</th>
                                        <th>Assigned Date</th>
                                        <th>Status</th>
                                        <th>Hours Worked</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var assignment in Model.Assignments.OrderByDescending(a => a.AssignedDate))
                                    {
                                        <tr>
                                            <td>@assignment.Task.Title</td>
                                            <td>@assignment.AssignedDate.ToString("MMM dd, yyyy")</td>
                                            <td>
                                                <span class="badge bg-@(assignment.Status switch {
                                                    DisasterAlleviationApplication.Models.AssignmentStatus.Assigned => "warning",
                                                    DisasterAlleviationApplication.Models.AssignmentStatus.Accepted => "info",
                                                    DisasterAlleviationApplication.Models.AssignmentStatus.InProgress => "primary",
                                                    DisasterAlleviationApplication.Models.AssignmentStatus.Completed => "success",
                                                    DisasterAlleviationApplication.Models.AssignmentStatus.Cancelled => "danger",
                                                    DisasterAlleviationApplication.Models.AssignmentStatus.NoShow => "dark",
                                                    _ => "secondary"
                                                })">@assignment.Status</span>
                                            </td>
                                            <td>@(assignment.HoursWorked?.ToString() ?? "N/A")</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                }

                <div class="d-flex justify-content-between mt-4">
                    <a asp-action="Index" class="btn btn-secondary">
                        <i class="fas fa-arrow-left me-1"></i>Back to List
                    </a>
                    <div>
                        @if (Model.UserId == ViewBag.CurrentUserId)
                        {
                            <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-warning">
                                <i class="fas fa-edit me-1"></i>Edit Profile
                            </a>
                            <a asp-action="Delete" asp-route-id="@Model.Id" class="btn btn-danger">
                                <i class="fas fa-trash me-1"></i>Delete Profile
                            </a>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Add current user ID to view bag for comparison
        @{
            ViewBag.CurrentUserId = User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value;
        }
    </script>
}
